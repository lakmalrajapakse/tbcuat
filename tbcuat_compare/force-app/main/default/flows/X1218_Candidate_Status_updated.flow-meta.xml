<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Custom_Notification</name>
        <label>Send Custom Notification</label>
        <locationX>50</locationX>
        <locationY>1703</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotificationRecordId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>createActiveRecipientsList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>NotificationTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>notificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_CandidateName</name>
        <label>Assign CandidateName</label>
        <locationX>182</locationX>
        <locationY>1379</locationY>
        <assignmentItems>
            <assignToReference>CandidateName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.FirstName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CandidateLastName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.LastName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_active_users</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>OnlyUsers</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>OnlyUsers</label>
        <locationX>182</locationX>
        <locationY>1055</locationY>
        <assignNextValueToReference>currentItem_OnlyUsers</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>MapGroupMembersToReciepientIDList</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_OnlyUsers</leftValueReference>
            <operator>StartsWith</operator>
            <rightValue>
                <stringValue>005</stringValue>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>GetActiveUsers</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>Has_active_users</name>
        <label>Has active users?</label>
        <locationX>182</locationX>
        <locationY>1487</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YesHasActive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>createActiveRecipientsList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>createActiveRecipientsList</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getCustomNotificationRecordId</targetReference>
            </connector>
            <label>YesHasActive</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Group_Members</name>
        <label>Has Group Members?</label>
        <locationX>380</locationX>
        <locationY>839</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Found_Group_Members</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGroupMembersFromPlan</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MapGroupMembersToReciepientIDList</targetReference>
            </connector>
            <label>Found Group Members</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_status</name>
        <label>What status</label>
        <locationX>380</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Pre_Interview</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.TR1__Candidate_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pre-Interview Review</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetGroupForPlan</targetReference>
            </connector>
            <label>Pre-Interview</label>
        </rules>
        <rules>
            <name>Onboarding_Review</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.TR1__Candidate_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Onboarding Review</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetGroupForPlan</targetReference>
            </connector>
            <label>Onboarding Review</label>
        </rules>
    </decisions>
    <description>Updated to use group members to send notifications</description>
    <environments>Default</environments>
    <formulas>
        <name>candidateStatusLabel</name>
        <dataType>String</dataType>
        <expression>CASE(TEXT({!$Record.TR1__Candidate_Status__c}), &quot;Application&quot;,&quot;Application&quot;,&quot;Pre-Interview Review&quot;,&quot;Pre-Interview Review&quot;,&quot;Interview&quot;,&quot;Interview&quot;,&quot;Onboarding&quot;,&quot;Onboarding&quot;,&quot;Onboarding Review&quot;,&quot;Onboarding Review&quot;,&quot;Manager Approval&quot;,&quot;Manager Approval&quot;,&quot;Registered&quot;,&quot;Registered&quot;,&quot;Offboarded&quot;,&quot;Offboarded&quot;,&quot;Rejected&quot;,&quot;Rejected&quot;, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>NotificationTitle</name>
        <dataType>String</dataType>
        <expression>&quot;Candidate moved to &apos;&quot;&amp;{!candidateStatusLabel}&amp;&quot;&apos; Stage.&quot;</expression>
    </formulas>
    <interviewLabel>1218 Candidate Status updated {!$Flow.CurrentDateTime}</interviewLabel>
    <label>1218 Candidate Status updated</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>gets the active users from the group members, we can&apos;t query the active status in the group member table.</description>
        <name>GetActiveUsers</name>
        <label>GetActiveUsers</label>
        <locationX>182</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>createActiveRecipientsList</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>OnlyUsers</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getCustomNotificationRecordId</name>
        <label>getCustomNotificationRecordId</label>
        <locationX>50</locationX>
        <locationY>1595</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Custom_Notification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Default</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetGroupForPlan</name>
        <label>GetGroupForPlan</label>
        <locationX>380</locationX>
        <locationY>623</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetGroupMembersFromPlan</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Plan_Code__r.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetGroupMembersFromPlan</name>
        <label>GetGroupMembersFromPlan</label>
        <locationX>380</locationX>
        <locationY>731</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_Group_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetGroupForPlan.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>What_status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TR1__Candidate_Status__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Contact</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>notificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!CandidateName} {!CandidateLastName} has been moved to &quot;{!candidateStatusLabel}&quot; Stage. Please check the record.</text>
    </textTemplates>
    <transforms>
        <name>createActiveRecipientsList</name>
        <label>createActiveRecipientsList</label>
        <locationX>182</locationX>
        <locationY>1271</locationY>
        <connector>
            <targetReference>Assign_CandidateName</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>GetActiveUsers[$EachItem].Id</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <transforms>
        <name>MapGroupMembersToReciepientIDList</name>
        <label>MapGroupMembersToReciepientIDList</label>
        <locationX>182</locationX>
        <locationY>947</locationY>
        <connector>
            <targetReference>OnlyUsers</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>GetGroupMembersFromPlan[$EachItem].UserOrGroupId</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <variables>
        <name>CandidateLastName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CandidateName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItem_OnlyUsers</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OwnerID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Recipient</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Recipients</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
