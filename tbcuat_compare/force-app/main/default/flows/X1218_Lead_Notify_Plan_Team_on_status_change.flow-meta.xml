<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Plan_team_notification_of_change</name>
        <label>Send Plan team notification of change</label>
        <locationX>50</locationX>
        <locationY>1403</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>getActiveUserRecipientIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Lead updated</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>LeadUpdatedNotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <collectionProcessors>
        <description>removes any non user id from the group member list</description>
        <name>onlyGroupUsers</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>onlyGroupUsers</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <assignNextValueToReference>currentItem_onlyGroupUsers</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>MapGroupMemberIdsToCollection</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_onlyGroupUsers</leftValueReference>
            <operator>StartsWith</operator>
            <rightValue>
                <stringValue>005</stringValue>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Has_users_in_Group_members</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>Has_Group_Members</name>
        <label>Has Group Members?</label>
        <locationX>380</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Found_Group_Members</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Members_for_Plan_Code</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MapGroupMemberIdsToCollection</targetReference>
            </connector>
            <label>Found Group Members</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Plan_Code</name>
        <label>Has Plan Code?</label>
        <locationX>611</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Plan_Code_Set</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Plan_Code__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Group_for_Plan</targetReference>
            </connector>
            <label>Plan Code Set</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_users_in_Group_members</name>
        <label>Has users in Group members?</label>
        <locationX>182</locationX>
        <locationY>971</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>onlyGroupUsers</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetActiveUserIds</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Sends a custom notification to all group members for the current plan the lead is linked to.</description>
    <environments>Default</environments>
    <interviewLabel>1218 - Lead - Notify Plan Team on status change {!$Flow.CurrentDateTime}</interviewLabel>
    <label>1218 - Lead - Notify Plan Team on status change</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Custom_Notification</name>
        <label>Get Custom Notification</label>
        <locationX>50</locationX>
        <locationY>1295</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Plan_team_notification_of_change</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reference_is_Received</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_for_Plan</name>
        <label>Get Group for Plan</label>
        <locationX>380</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Members_for_Plan_Code</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Plan_Code__r.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Members_for_Plan_Code</name>
        <label>Get Group Members for Plan Code</label>
        <locationX>380</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_Group_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Group_for_Plan.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetActiveUserIds</name>
        <label>GetActiveUserIds</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getActiveUserRecipientIds</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>onlyGroupUsers</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Has_Plan_Code</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Lead_Status__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Lead__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>LeadUpdatedNotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Lead: {!$Record.Name} has been updated to {!$Record.Lead_Status__c}</text>
    </textTemplates>
    <transforms>
        <description>Creates a set of Ids for the active users</description>
        <name>getActiveUserRecipientIds</name>
        <label>getActiveUserRecipientIds</label>
        <locationX>50</locationX>
        <locationY>1187</locationY>
        <connector>
            <targetReference>Get_Custom_Notification</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>GetActiveUserIds[$EachItem].Id</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <transforms>
        <name>MapGroupMemberIdsToCollection</name>
        <label>MapGroupMemberIdsToCollection</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>onlyGroupUsers</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>Get_Group_Members_for_Plan_Code[$EachItem].UserOrGroupId</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <variables>
        <name>currentItem_onlyGroupUsers</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
